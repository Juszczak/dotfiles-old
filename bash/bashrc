# ~/.bashrc
# terminal config file
# Adrian Juszczak
# adrian@juszczak.io
# https://git.io/juszczak

# case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob;

# append to the Bash history file, rather than overwriting it
shopt -s histappend;

# autocorrect typos in path names when using `cd`
shopt -s cdspell;

# enable some Bash 4 features when possible:
# * `autocd`, e.g. `**/qux` will enter `./foo/bar/baz/qux`
# * recursive globbing, e.g. `echo **/*.txt`
for option in autocd globstar; do
	shopt -s "$option" 2> /dev/null;
done;

# set prompt
prompt="$HOME/.bash/prompt/promptline.sh"
if [ -f $prompt ]; then
	source $prompt
fi
unset prompt;

# set completions
completions="$(brew --prefix)/etc/bash_completion"
if [ -f $completions ]; then
	source $completions
fi
unset completions;

# env vars
variables="$HOME/.bash/env/variables.sh"
if [ -f $variables ]; then
	source $variables
fi

# set completion for ssh hostnames
sshconfig="$HOME/.ssh/config"
[ -e "$sshconfig" ] && \
	complete -o "default" -o "nospace" \
	-W "$(grep "^Host" $sshconfig | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" \
	scp sftp ssh;
unset sshconfig;

# set marks
marks="$HOME/.bash/marks/marks.sh"
if [ -f $marks ]; then
	source $marks
fi
unset marks;

# gnu environmen
# PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
# MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"

# hacked gnu ls instead of darwin's one
dircolors=~/.dircolors
if [ -f $dircolors ]; then
	eval `gdircolors -b $dircolors`
fi
unset dircolors
alias ls="gls --color=always -F -I \"Icon\""
alias grep="grep --color=always"
alias egrep="egrep --color=always"

# android sdk
android_home="/usr/local/opt/android-sdk"
if [ -d $android_home ]; then
	export ANDROID_HOME=$android_home
fi
unset android_home

# nvm (from homebrew)
if [ -d "$HOME/.nvm" ]; then
	NVM_DIR="$HOME/.nvm"
	export NVM_DIR
	[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
fi

# goroot
export PATH="$PATH:/usr/local/opt/go/libexec/bin"

# pyenv (from homebrew)
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

# set vi mode
set -o vi
