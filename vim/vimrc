" ~/.vimr
" vim configuration file
" Adrian Juszczak
" adrian@juszczak.io
" https://git.io/juszczak

set nocompatible
filetype off

" key bindings
" F1 HELP
" F2 Paste Mode
" F3 NerdTree
" F4 Gundo
" F5 Spell checker
" F6 Cursor Column
" F7 Line Wrapping
" F8 Tabs as chars
" F9 Semantic Highlight
" F10 Autoformat

" note: vim works only with posix shells
set shell=/usr/local/bin/bash

set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()

" Vundle, the plug-in manager
" https://github.com/VundleVim/Vundle.vim
Plugin 'VundleVim/Vundle.vim'

" status/tabline
" https://github.com/bling/vim-airline
Plugin 'bling/vim-airline'

" git wrapper
" https://github.com/tpope/vim-fugitive
Plugin 'tpope/vim-fugitive'

" git status in the gutter
" https://github.com/airblade/vim-gitgutter
Plugin 'airblade/vim-gitgutter'

" marks
" https://github.com/kshenoy/vim-signature
Plugin 'kshenoy/vim-signature'

" visualize undo tree
" https://github.com/sjl/gundo.vim
Plugin 'sjl/gundo.vim'

" fuzzy finder
" https://github.com/ctrlpvim/ctrlp.vim
Plugin 'ctrlpvim/ctrlp.vim'

" tree explorer
" https://github.com/scrooloose/nerdtree
Plugin 'scrooloose/nerdtree'

" nerdtree ext
" https://github.com/jistr/vim-nerdtree-tabs
Plugin 'jistr/vim-nerdtree-tabs'

" git status in nerdtree
" https://github.com/Xuyuanp/nerdtree-git-plugin
Plugin 'Xuyuanp/nerdtree-git-plugin'

" icons
" https://github.com/ryanoasis/vim-devicons
Plugin 'ryanoasis/vim-devicons'

" set cwd to proj root
" https://github.com/airblade/vim-rooter
Plugin 'airblade/vim-rooter'

" brackets, parens, quotes, etc
" https://github.com/jiangmiao/auto-pairs
Plugin 'jiangmiao/auto-pairs'

" quoting, parenthesizing, etc
" https://github.com/tpope/vim-surround
Plugin 'tpope/vim-surround'

" comments
" https://github.com/tomtom/tcomment_vim
Plugin 'tomtom/tcomment_vim'

" emacs-like narrow regions
" https://github.com/chrisbra/NrrwRgn
Plugin 'chrisbra/NrrwRgn'

" colors preview
" https://github.com/gorodinskiy/vim-coloresque
Plugin 'gorodinskiy/vim-coloresque'

" js code analyzer
" https://github.com/ternjs/tern_for_vim
Plugin 'ternjs/tern_for_vim'

" completion engine
" https://github.com/Valloric/YouCompleteMe
Plugin 'Valloric/YouCompleteMe'

" snippets solution
" https://github.com/SirVer/ultisnips
Plugin 'SirVer/ultisnips'

" code formating
" https://github.com/Chiel92/vim-autoformat
Plugin 'Chiel92/vim-autoformat'

" editor config  http://editorconfig.org
" https://github.com/editorconfig/editorconfig-vim
Plugin 'editorconfig/editorconfig-vim'

" solid language pack
" https://github.com/sheerun/vim-polyglot
Plugin 'sheerun/vim-polyglot'

" semantic variables highlight
" https://github.com/jaxbot/semantic-highlight.vim
Plugin 'jaxbot/semantic-highlight.vim'

" indent levels
" https://github.com/nathanaelkane/vim-indent-guides
Plugin 'nathanaelkane/vim-indent-guides'

" auto-close html tags
" https://github.com/alvan/vim-closetag
Plugin 'alvan/vim-closetag'

" match html tags
" https://github.com/Valloric/MatchTagAlways
Plugin 'Valloric/MatchTagAlways'

" extended % jump
" https://github.com/tmhedberg/matchit
Plugin 'tmhedberg/matchit'

" tmux syntax
" https://github.com/tmux-plugins/vim-tmux
Plugin 'tmux-plugins/vim-tmux'

" tmuxline builder
" https://github.com/edkolev/tmuxline.vim
Plugin 'edkolev/tmuxline.vim'

" prompt builder
" https://github.com/edkolev/promptline.vim
Plugin 'edkolev/promptline.vim'

" brew bundle syntax
" https://github.com/bfontaine/Brewfile.vim
Plugin 'bfontaine/Brewfile.vim'

" misc auto load scripts
" https://github.com/xolox/vim-misc
Plugin 'xolox/vim-misc'

" notes in vim
" https://github.com/xolox/vim-notes
Plugin 'xolox/vim-notes'

" distraction-free mode
" https://github.com/junegunn/goyo.vim
Plugin 'junegunn/goyo.vim'

call vundle#end()
filetype plugin indent on

" space as colon
nmap <space> :

" escape with jj
imap jj <esc>

" quick search
nmap <space><space> /

" move inside wrapped lines
" nnoremap j gj
" nnoremap k gk

" center cursorline after next search
" nnoremap n nzz

" easier window navigation with hjkl
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l

" chrome-like tab switching
nmap <D-1> 1gt
nmap <D-2> 2gt
nmap <D-3> 3gt
nmap <D-4> 4gt
nmap <D-5> 5gt
nmap <D-6> 6gt
nmap <D-7> 7gt
nmap <D-8> 8gt
nmap <D-9> 9gt

nmap <D-§> gT
nmap <D-0> gt

nmap <F2> :set invpaste paste?<CR>

" toggle nerdtree
nmap <F3> :NERDTreeTabsToggle<cr>

" toggle gundo
nmap <F4> :GundoToggle<CR>

" toggle spellchecker
nmap <F5> :set spell! spell?<Cr>

" toggle cursor column
nmap <F6> :set cursorcolumn! cursorcolumn?<Cr>

" toggle lines wrapping
map <F7> :set wrap! nowrap?<CR>

" toggle tabs as chars
nmap <F8> :set list! list?<Cr>

" toggle incremental search
nmap <F9> :SemanticHighlightToggle<CR>

" autoformat
noremap <F10> :Autoformat<CR><CR>

" allow saving of files as sudo when forgot to start vim using sudo
cmap w!! w !sudo tee > /dev/null %

" syntax highlighting on
syntax on

colorscheme artefakt

set encoding=utf-8

set laststatus=2

set t_Co=256

" https://github.com/powerline/fonts
set guifont=Sauce\ Code\ Pro:h13

" disable beeping
set noeb vb t_vb=
set vb t_vb=

set incsearch

set ignorecase

" highlight last search
set hlsearch

" clear search hl
nnoremap <ESC> :silent noh<CR>

set viewoptions=
	\folds,
	\options,
	\cursor,
	\unix,
	\slash

" allow for cursor beyond last character
" set virtualedit=onemore

"  ton of history (default is 20)
set history=1000

" no duplicated tabs
set switchbuf=usetab
set showtabline=1

" no spellchecking by default
set nospell

" buffer switching without saving
set hidden

" ignore case if search pattern is all lowercase
set smartcase

" write the old file out when switching between files
set autowrite

" show matching brackets
set showmatch
set matchtime=0

" enable mouse in all modes
set mouse=a

" hide mouse pointer when characters are typed
set mousehide

" sane backspace
set backspace=indent,eol,start

set linebreak
" set wrap

" no annoying ~ files
set nobackup
set nowritebackup
set noswapfile

" persist the undo tree to a file
set undofile

" dir below will not be auto-created
set undodir=$HOME/.vim/undodir
set directory=$HOME/.vim/swapdir

" recursive :find, :grep, etc
set path=.,**

" remove comment leader when joining lines
set formatoptions+=j

" indent settings
set shiftwidth=2
set tabstop=2

" prefer spaces
set expandtab

set smarttab

" spaces for autoindent
set shiftwidth=2

" spaces for tab
set softtabstop=2

" round indents
set shiftround

" faster macros
set lazyredraw

" stronger encryption
set cryptmethod=blowfish2

" line numbers
set number

" relative numbers by default
set relativenumber

" highlight current line
set cursorline

" set the file name as terminal title
set titlestring=%f title

" show typed commands
set showcmd

" sane horizontal scroll
set sidescroll=2

" lines from screen edge
set scrolloff=4

" columns from scren edge
set sidescrolloff=4

" improved redrawing
set ttyfast

" mark tabs as dots
set list  "(+=)
set listchars=
  \tab:·\ 

" set osx' clipboard
" set clipboard=unnamed

" hide scrollbar in MacVim
set guioptions-=r
set guioptions-=L

set wildignore+=*/tmp/*,*.so,*.swp,*.zip

" plugins settings

" airline
" :help airline
let g:Powerline_symbols = 'fancy'
let g:airline_powerline_fonts = 1
let g:airline_theme = 'dark'

" tabline
" :help airline-tabline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tabline#tab_nr_type = 1
let g:airline#extensions#tabline#show_tab_nr = 1
let g:airline#extensions#tabline#show_tab_type = 1
let g:airline#extensions#tabline#formatter = 'default'
" :help filename-modifiers
let g:airline#extensions#tabline#fnamemod = ':s?NERD_tree_1?tree?:s?ControlP?open?:t:.'
let g:airline#extensions#tabline#fnamecollapse = 1
let g:airline#extensions#tabline#fnametruncate = 0
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'

let g:airline#extensions#tabline#tab_min_count = 0
let g:airline#extensions#tabline#show_close_button = 1
let g:airline#extensions#tabline#close_symbol = 'X'

" gitgutter
let g:gitgutter_sign_column_always = 0
let g:gitgutter_max_signs = 1000
let g:gitgutter_realtime = 0
let g:gitgutter_eager = 1
let g:gitgutter_highlight_lines = 0

let g:gitgutter_sign_added = '+'
let g:gitgutter_sign_modified = '~'
let g:gitgutter_sign_removed = '-'
let g:gitgutter_sign_removed_first_line = '~'
let g:gitgutter_sign_modified_removed = '~'

" signature
function! SignatureGitGutter(lnum)
	let gg_line_state = filter(
    \ copy(gitgutter#diff#process_hunks(gitgutter#hunk#hunks())),
    \ 'v:val[0] == a:lnum'
  \ )

	if len(gg_line_state) == 0
		return 'Exception'
	endif

	if gg_line_state[0][1] =~ 'added'
		return 'GitGutterAdd'
	elseif gg_line_state[0][1] =~ 'modified'
		return 'GitGutterChange'
	elseif gg_line_state[0][1] =~ 'removed'
		return 'GitGutterDelete'
	endif
endfunction
let g:SignatureMarkTextHL = 'SignatureGitGutter(a:lnum)'

" gundo
" http://sjl.bitbucket.org/gundo.vim/#configuration
let g:gundo_width = 45
let g:gundo_preview_height = 15
let g:gundo_right = 1
let g:gundo_preview_bottom = 1
let g:gundo_help = 0
let g:gundo_auto_preview = 1
let g:gundo_playback_delay = 60

" ctrlp
" https://github.com/kien/ctrlp.vim#basic-options
let g:ctrlp_working_path_mode = 'ra'

" ignore files from gitignore
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']

" nerdtree

" open on startup without args
au StdinReadPre * let s:std_in=1
au VimEnter * if argc() == 0
  \ && !exists("s:std_in") | NERDTree | endif

let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'

let g:NERDTreeShowBookmarks = 1
let g:NERDTreeMinimalUI = 1

let g:NERDTreeIgnore = [
  \ '\.DS_Store$',
  \ '\Icon$',
  \ '\~$']

" nerdtreetabs
let g:nerdtree_tabs_open_on_new_tab = 1
let g:nerdtree_tabs_open_on_gui_startup = 0
let g:nerdtree_tabs_open_on_console_startup = 0
let g:nerdtree_tabs_no_startup_for_diff = 1
let g:nerdtree_tabs_smart_startup_focus = 1
let g:nerdtree_tabs_meaningful_tab_names = 1

" nerdtree-git-plugin
let g:NERDTreeMapNextHunk = "]c"
let g:NERDTreeMapPrevHunk = "[c"
let g:NERDTreeUseSimpleIndicator = 0

let g:NERDTreeIndicatorMapCustom = {
  \ "Modified"  : "~",
  \ "Staged"    : "+",
  \ "Untracked" : "•",
  \ "Renamed"   : "→",
  \ "Unmerged"  : "═",
  \ "Deleted"   : "-",
  \ "Dirty"     : "×",
  \ "Clean"     : "*",
  \ "Unknown"   : "?"
  \ }

" devicons
if exists("g:loaded_webdevicons")
    call webdevicons#refresh()
endif

let g:webdevicons_enable = 1
let g:webdevicons_enable_nerdtree = 1
let g:webdevicons_enable_airline_tabline = 1
let g:webdevicons_enable_airline_statusline = 1
let g:webdevicons_enable_ctrlp = 1

let g:WebDevIconsNerdTreeAfterGlyphPadding = ''
let g:WebDevIconsNerdTreeGitPluginForceVAlign = 1
let g:WebDevIconsUnicodeGlyphDoubleWidth = 1

let g:WebDevIconsUnicodeDecorateFolderNodes = 1

autocmd FileType nerdtree setlocal nolist

source ~/.vim/config/nerdtree.vim

" tern
let g:tern#is_show_argument_hints_enabled = 1

fun BindTern()
  " jump to definition
  nmap tdef :TernDef<CR>

  " preview definition
  nmap tdp :TernDefPreview<CR>

  " open def in split
  nmap tds :TernDefSplit<CR>

  " open def in new tab
  nmap tdt :TernDefTab<CR>

  " show doc
  nmap tdoc :TernDoc<CR>

  " open doc in browser
  nmap tdb :TernDocBrowse<CR>

  " preview refs
  nmap tref :TernRefs<CR>

  " rename
  nmap tren :TernRename<CR>

  " type
  nmap ttp :TernType<CR>
endfun

au BufNewFile,BufRead *.js call BindTern()

" ycm
let g:ycm_use_ultisnips_completer = 1

" ultisnips
let g:UltiSnipsSnippetsDir=$HOME."/.vim/snipps"
let g:UltiSnipsSnippetDirectories=[$HOME.'/.vim/snipps']
let g:UltiSnipsEditSplit = "horizontal"

let g:UltiSnipsExpandTrigger = "<c-a>"
let g:UltiSnipsJumpForwardTrigger = "<c-j>"
let g:UltiSnipsJumpBackwardTrigger = "<c-k>"

" rooter
let g:rooter_silent_chdir = 1

" semantic hilight

let s:semanticGUIColors = [
  \ '#72d572', '#c5e1a5',
  \ '#e6ee9c', '#fff59d',
  \ '#ffe082', '#ffcc80',
  \ '#ffab91', '#bcaaa4',
  \ '#b0bec5', '#ffa726',
  \ '#ff8a65', '#f9bdbb',
  \ '#f9bdbb', '#f8bbd0',
  \ '#e1bee7', '#d1c4e9',
  \ '#ffe0b2', '#c5cae9',
  \ '#d0d9ff', '#b3e5fc',
  \ '#b2ebf2', '#b2dfdb',
  \ '#a3e9a4', '#dcedc8',
  \ '#f0f4c3', '#ffb74d'
  \ ]

let g:semanticTermColors = [
  \ 28, 1, 2, 3, 4, 5, 6, 7,
  \ 25, 9, 10, 34, 12, 13,
  \ 14, 15, 16, 125, 124, 19
  \ ]

au FileType coffee,javascript,typescript,python,ruby
  \ :SemanticHighlight

nmap <Leader>s :SemanticHighlight<CR>

let g:semanticBlacklistOverride = {}

" indent guides
let g:indent_guides_enable_on_vim_startup = 0
let g:indent_guides_auto_colors = 0
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1
let g:indent_guides_exclude_filetypes = ['help', 'nerdtree']

" tmuxline
let g:tmuxline_preset = 'adrian'

" do not overwrite tmux theme
let g:airline#extensions#tmuxline#enabled = 0

let g:notes_directories = [
  \ '~/Dropbox/Notes'
  \ ]

let g:notes_unicode_enabled = 1
let g:notes_suffix = '.note'

" filetypes events
au BufNewFile,BufRead .eslintrc set ft=json

au BufNewFile,BufRead *dircolors set ft=dircolors
au BufNewFile,BufRead *.conf set ft=tmux

au BufNewFile,BufRead *.scss.liquid set ft=scss
au BufNewFile,BufRead *.js.liquid set ft=javascript

au BufNewFile,bufRead *editorconfig set ft=dosini
au BufNewFile,bufRead *ackrc set ft=dosini
au BufNewFile,bufRead *npmrc set ft=dosini

au BufNewFile,BufRead *gemrc set ft=yaml

au BufNewFile,BufRead *jsx set ft=javascript
au BufNewFile,BufRead *tsx set ft=typescript
