" ~/.vimr
" Adrian Juszczak
" (https://github.com/juszczak/dotfiles)

set nocompatible
filetype off


" key bindings
" F1 HELP
" F2 Paste Mode Toggle
" F3 NerdTree Toggle
" F4 Gundo Toggle
" F5 CoffeeWatch
" F6 Relative Number Toggle
" F7 Line wrapping toggle
" F8 Search Ignore Case Toggle
" F9 Incremental Search Toggle
" F10 Autoformat

" note: vim works only with posix shells
set shell=/usr/local/bin/bash

set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()

" Vundle, the plug-in manager
" https://github.com/VundleVim/Vundle.vim
Plugin 'VundleVim/Vundle.vim'

" status/tabline
" https://github.com/bling/vim-airline
Plugin 'bling/vim-airline'

" git wrapper
" https://github.com/tpope/vim-fugitive
Plugin 'tpope/vim-fugitive'

" git status in the gutter
" https://github.com/airblade/vim-gitgutter
Plugin 'airblade/vim-gitgutter'

" tree explorer
" https://github.com/scrooloose/nerdtree
Plugin 'scrooloose/nerdtree'

" nerdtree and tabs together, painlessly
" https://github.com/jistr/vim-nerdtree-tabs
Plugin 'jistr/vim-nerdtree-tabs'

" git status in nerdtree
" https://github.com/Xuyuanp/nerdtree-git-plugin
Plugin 'Xuyuanp/nerdtree-git-plugin'

call vundle#end()
filetype plugin indent on

" space as colon
nmap <space> :

" escape with jj
imap jj <esc>

" quick search
nmap <space><space> /

" easier window navigation with hjkl
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l

" chrome-like tab switching
nmap <D-1> 1gt
nmap <D-2> 2gt
nmap <D-3> 3gt
nmap <D-4> 4gt
nmap <D-5> 5gt
nmap <D-6> 6gt
nmap <D-7> 7gt
nmap <D-8> 8gt
nmap <D-9> 9gt

nmap <D-§> gT
nmap <D-0> gt

nmap <F2> :set invpaste paste?<CR>

" toggle NERDTree
nmap <F3> :NERDTreeTabsToggle<cr>

" toggle relative numbers
nmap <F6> :set relativenumber! relativenumber?<Cr>

" toggle lines wrapping
map <F7> :set wrap! nowrap?<CR>

" toggle case  sensitive/insensitive search
nmap <F8> :set ignorecase! ignorecase?<Cr>

" toggle incremental search
nmap <F9> :set incsearch! incsearch?<CR>

" allow saving of files as sudo when forgot to start vim using sudo
cmap w!! w !sudo tee > /dev/null %

" set syntax highlighting on
syntax on

colorscheme artefakt

set encoding=utf-8

set laststatus=2

set t_Co=256

set guifont=Source\ Code\ Pro\ for\ Powerline:h13

set noeb vb t_vb=
set vb t_vb=

try
	set transparency =5
catch
endtry

set pastetoggle=<F2>

set incsearch

set ignorecase

" highlight all matching search patterns
" set hlsearch!

" ignore case if search pattern is all lowercase
set smartcase

" write the old file out when switching between files
set autowrite

" show matching brackets
set showmatch

" enable mouse in all modes
set mouse=a

" hide mouse pointer when characters are typed
set mousehide

" sane backspace
set backspace=indent,eol,start

" indent settings
set shiftwidth=2
set tabstop=2
set expandtab

" line numbers
set number

" relative numbers by default
set relativenumber

" highlight current line
set cursorline

" no annoying ~ files
set nobackup
set nowritebackup
set noswapfile

" set the file name as terminal title
set titlestring=%f title

" set osx' clipboard
" set clipboard=unnamed

" hide scrollbar in MacVim
set guioptions-=r
set guioptions-=L

" auto set cwd
autocmd BufEnter * lcd %:p:h

" plugins settings

" airline
" TODO
let g:Powerline_symbols = 'fancy'
let g:airline_powerline_fonts = 1
let g:airline_theme = 'dark'


" tabline
" :help airline-tabline for more info
let g:airline#extensions#tabline#enabled = 1
" TODO:
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tabline#tab_nr_type = 1
let g:airline#extensions#tabline#show_tab_nr = 1
let g:airline#extensions#tabline#show_tab_type = 1
let g:airline#extensions#tabline#formatter = 'default'
" :help filename-modifiers
let g:airline#extensions#tabline#fnamemod = ':s?NERD_tree_1?tree?:s?ControlP?open?:t:.'
let g:airline#extensions#tabline#fnamecollapse = 1
let g:airline#extensions#tabline#fnametruncate = 0
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'

let g:airline#extensions#tabline#tab_min_count = 0
let g:airline#extensions#tabline#show_close_button = 1
let g:airline#extensions#tabline#close_symbol = 'X'

" gitgutter

let g:gitgutter_sign_column_always = 1
let g:gitgutter_max_signs = 1000
let g:gitgutter_realtime = 0
let g:gitgutter_eager = 1
" let g:gitgutter_highlight_lines = 1

" override default signs + - ~
" let g:gitgutter_sign_added = '⦁'
" let g:gitgutter_sign_modified = '⦁'
" let g:gitgutter_sign_removed = '⦁'
" let g:gitgutter_sign_removed_first_line = '⦁'
" let g:gitgutter_sign_modified_removed = '⦁'

" nerdtree

" open automatically when vim starts up
autocmd vimenter * if !argc() | NERDTree | endif

" open automatically when vim starts up
"   if no files were specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0
  \ && !exists("s:std_in") | NERDTree | endif

autocmd bufenter * if (winnr("$") == 1
  \ && exists("b:NERDTree")
  \ && b:NERDTree.isTabTree()) | q | endif

" show hidden files in NerdTree
" let g:NERDTreeShowHidden=1

let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'

" nerdtreetabs
let g:nerdtree_tabs_open_on_new_tab = 1

" nerdtree-git-plugin

let g:NERDTreeMapNextHunk = "]c"
let g:NERDTreeMapPrevHunk = "[c"

" TODO: set to something sane
let g:NERDTreeUseSimpleIndicator = 0
let g:NERDTreeIndicatorMapCustom = {
  \ "Modified"  : "~",
  \ "Staged"    : "+",
  \ "Untracked" : "•",
  \ "Renamed"   : "→",
  \ "Unmerged"  : "═",
  \ "Deleted"   : "x",
  \ "Dirty"     : "x",
  \ "Clean"     : "*",
  \ "Unknown"   : "?"
  \ }
